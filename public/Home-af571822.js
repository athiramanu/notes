import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, a as space, e as element, t as text, b as attr_dev, c as add_location, f as insert_dev, g as append_dev, n as noop, h as detach_dev } from './index.js';

/* src/components/Home.svelte generated by Svelte v3.37.0 */

const file = "src/components/Home.svelte";

function create_fragment(ctx) {
	let t0;
	let h1;
	let t2;
	let section;
	let div0;
	let span0;
	let t4;
	let div1;
	let span1;
	let t5;
	let strong0;
	let t7;
	let div2;
	let span2;
	let t9;
	let div3;
	let span3;
	let t10;
	let strong1;
	let t12;
	let div4;
	let span4;
	let t14;
	let div5;
	let strong2;
	let t16;
	let strong3;

	const block = {
		c: function create() {
			t0 = space();
			h1 = element("h1");
			h1.textContent = "Instructions";
			t2 = space();
			section = element("section");
			div0 = element("div");
			span0 = element("span");
			span0.textContent = "Choose a name for yor NotePad (max: 32 characters)";
			t4 = space();
			div1 = element("div");
			span1 = element("span");
			t5 = text("Append the name to the end of the url. eg: ");
			strong0 = element("strong");
			strong0.textContent = "/myNote";
			t7 = space();
			div2 = element("div");
			span2 = element("span");
			span2.textContent = "Type your note in the text area (max: 10000 characters)";
			t9 = space();
			div3 = element("div");
			span3 = element("span");
			t10 = text("Click on ");
			strong1 = element("strong");
			strong1.textContent = "Save";
			t12 = space();
			div4 = element("div");
			span4 = element("span");
			span4.textContent = "Use the new url to access the note from anywhere you want";
			t14 = space();
			div5 = element("div");
			strong2 = element("strong");
			strong2.textContent = "<<";
			t16 = text(" Only 1000 notes are saved at a time. Old notes can get deleted ");
			strong3 = element("strong");
			strong3.textContent = ">>";
			document.title = "ScribbleIt";
			attr_dev(h1, "class", "svelte-3zhbts");
			add_location(h1, file, 4, 0, 57);
			attr_dev(span0, "class", "svelte-3zhbts");
			add_location(span0, file, 7, 22, 126);
			attr_dev(div0, "class", "item");
			add_location(div0, file, 7, 4, 108);
			attr_dev(strong0, "class", "svelte-3zhbts");
			add_location(strong0, file, 8, 71, 267);
			attr_dev(span1, "class", "svelte-3zhbts");
			add_location(span1, file, 8, 22, 218);
			attr_dev(div1, "class", "item");
			add_location(div1, file, 8, 4, 200);
			attr_dev(span2, "class", "svelte-3zhbts");
			add_location(span2, file, 9, 22, 327);
			attr_dev(div2, "class", "item");
			add_location(div2, file, 9, 4, 309);
			attr_dev(strong1, "class", "svelte-3zhbts");
			add_location(strong1, file, 10, 37, 439);
			attr_dev(span3, "class", "svelte-3zhbts");
			add_location(span3, file, 10, 22, 424);
			attr_dev(div3, "class", "item");
			add_location(div3, file, 10, 4, 406);
			attr_dev(span4, "class", "svelte-3zhbts");
			add_location(span4, file, 11, 22, 496);
			attr_dev(div4, "class", "item");
			add_location(div4, file, 11, 4, 478);
			attr_dev(strong2, "class", "svelte-3zhbts");
			add_location(strong2, file, 12, 33, 606);
			attr_dev(strong3, "class", "svelte-3zhbts");
			add_location(strong3, file, 12, 122, 695);
			attr_dev(div5, "class", "item disclaimer svelte-3zhbts");
			add_location(div5, file, 12, 4, 577);
			attr_dev(section, "class", "steps svelte-3zhbts");
			add_location(section, file, 6, 0, 80);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, h1, anchor);
			insert_dev(target, t2, anchor);
			insert_dev(target, section, anchor);
			append_dev(section, div0);
			append_dev(div0, span0);
			append_dev(section, t4);
			append_dev(section, div1);
			append_dev(div1, span1);
			append_dev(span1, t5);
			append_dev(span1, strong0);
			append_dev(section, t7);
			append_dev(section, div2);
			append_dev(div2, span2);
			append_dev(section, t9);
			append_dev(section, div3);
			append_dev(div3, span3);
			append_dev(span3, t10);
			append_dev(span3, strong1);
			append_dev(section, t12);
			append_dev(section, div4);
			append_dev(div4, span4);
			append_dev(section, t14);
			append_dev(section, div5);
			append_dev(div5, strong2);
			append_dev(div5, t16);
			append_dev(div5, strong3);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(h1);
			if (detaching) detach_dev(t2);
			if (detaching) detach_dev(section);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Home", slots, []);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Home> was created with unknown prop '${key}'`);
	});

	return [];
}

class Home extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Home",
			options,
			id: create_fragment.name
		});
	}
}

export default Home;
//# sourceMappingURL=Home-af571822.js.map
